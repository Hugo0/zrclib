import { AbiCoder } from "@ethersproject/abi";
import { ethers } from "hardhat";

let input =
  "0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000004a00000000000000000000000000000000000000000000000000000000000000120121e61e146f88114b050e759197d790ff3bdc1a9adb05e46d5432219d7012f641fc72de6d2349b8afe97ab6340d787e264860a6d5ad745ce3b9a7b51366ff5d91e86101010a1fd9993d3fd83d5e64f59a97d2b1c97186bb915aca7822b5f8a7403c8aa3a0c7d7f36b885fcd47902a26cfb54bcfb7fb046a3de4200f616a7288c0ea50cfc3d4b7d77fbfa0d88b583892b60e33315f3f3a42b47731b820aadaf6a00000000000000000000000000000000000000000000000000000000004c4b400000000000000000000000005fc8d32690cc91d4c39d9d3abcbd16989f8757071af6670861f5141689747966db5cfa7c353a8af1aedb35b96a06f11c2be86cd500000000000000000000000000000000000000000000000000000000000003201dc7a211ec45f212647366dcece1ead2b22e1f42dcbe23e402cab57881a96d172dd6cc92ffac15717121c13ef79355a8c980893f01b8d0772cad754369fae5671fb068bc56ab1d6492a6ddf080b99367f2294a118da9f09dc3b25a22383aa660033bccd0d099c274cdb02fb56fe4ebb8fc417b5e73b38d0bff344a8832abc4c71bee094b4e88dea1e641f948ea990e3b5bfac57f825a122df23527b424c3e4da07a2d587188b4bf1d49ca9ac613229a50a0fe8cfaa8f8208c8de0a3b29c41bf223440c4237ba7a49c804b7c23f167805a5eeab81812f775ce58589a8c036fab317a3889d48600e70deb5961ffcf484348c7424b69b99ff1565d2483743854668221c8cb052e837449a43be6e36762ef95cc19a1ba320774df2c62b64b83248371191cf454e150ab17ff7b769ee8476c8dda39ef586f09d0fdf2b7f3afb1049d61840f8640249f74d0182f62c0ee0beb6882d561c4ee0c190c8a5a850ebf146ef2119891005347e31ab8595ed7a166e4febf655624d618c4a102d835c557f1b661e7c4fb247d82b0e155d427062da3209c0d6410b1793f969b4f09396d3ed3ed42a6e2ff416a12f15516f04b2102b809becc08d33e31581373d63322370cc9bc01d96f682495ee7cc3da026870be00d56c3909528de6bcb9a4a59b630806467cf2229a33d29c3b3ca7110c368fae1b7647c57139a7faa3584cd9855e9d97216f328e95466a56ca873dd7807d997b6eab4c0320b83d610b94d8a89c46b7fac29511e913f1cc93e08b6a9c57af78b5087c2779e71a939706e82a48605e48fd2a40501998baf36bc779969e5315f51f8c87619f7496aa5611fd198e4b8b6276eb542057aabc655ee977a4eb6cd7b99811db54c912a24db19d43e0517a1bc36c5271118efc154a2a05ad717b1691b2103a38c945dff562451328f8afbab94e90cff991ed86732698c344717c4febe9d654719a3f28f50a216c1ca4cb45033100e03b5079eda154c86d5262f070e5057ed7614e27b48d223b0e8eadaa94263502b74dd120046393745645da5116ff264e335f41e34bf44adcba70d54e59a2887004f5d00f951f536c9676b56bf6812130b58d6345e8e45a63370865a953523d1921557000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004c4bc48a9553ef83121475e55f35af7529c591262fad53a8bd67994c72fe165a59c983f32a9ed60d7512e211ade3b080e621decf9342d226410e65ba2ecb35461d69ad05f42ceea431fa1b92c1647cb0e6a38dcb42db41c61213b335023f28b8c736e6a623d6af5ae9abc84c26bae6a843597dfff31716f7c9d93261a22b0ef08abc0e7353b78c7b659fcea045ac15c238044dfa8dae65e5ac16244206607a45ede451e402e20d035ac349f0014a3fa190385bc193184e1665c63122a6254d696e42be392d6b680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4727190ffdf9e484d40010628797a6b43726f3fac2d26e1c8d79ef2491dcae2d972504e9156084f2929fec2b473afdedb82ebdf1801cae53b5d9b2060c7d4b409aaf6bf986c72ca2390d92d959a8d3145c1f476648673e1dd510dc26f1b79d056b44a2e62e19e6e7ef4e344f49871e75ee4641f19baf62966979aa9c5a5c6ae16227b692bbd608658e56341efd835faaf85a104bd3e8c8f3f80bfe44ea39caa901bba52f43194054de71c1ef71541e5c1307a7a8fb27e27bd9304249730b589c630fe1ca8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000";

it("should decode", () => {
  const abi = new ethers.utils.AbiCoder();
  const decoded = abi.decode(
    [
      "tuple(bytes proof,bytes32 root,bytes32[2] inputNullifiers,bytes32[2] outputCommitments,uint256 publicAmount,address publicAsset,bytes32 extDataHash)",
      "tuple(address recipient,int256 extAmount,bytes encryptedOutput1,bytes encryptedOutput2,address tokenOut,uint256 amountOutMin,address swapRecipient,address swapRouter,bytes swapData,bytes transactData)",
    ],
    input
  );

  console.log(decoded);
});
